# build stage
FROM node:lts-alpine AS frontend-deps
WORKDIR /app
COPY ./package.json .
RUN npm install

COPY . .
RUN npm run build

# Production stage
FROM python:3.7-slim AS python-base

ENV ENVIRONMENT=$ENVIRONMENT
ENV CENTRICITY_DB_NAME=$CENTRICITY_DB_NAME
ENV SECRET_MANAGER_NAME=$SECRET_MANAGER_NAME

# Install packages needed to run your application (not build deps):
#   mime-support -- for mime types when serving static files
#   postgresql-client -- for running database commands
# We need to recreate the /usr/share/man/man{1..8} directories first because
# they were clobbered by a parent image.
WORKDIR /app
COPY --from=frontend-deps /app/static .

RUN set -ex \
    && RUN_DEPS=" \
    libpcre3 \
    mime-support \
    postgresql-client \
    " \
    && seq 1 8 | xargs -I{} mkdir -p /usr/share/man/man{} \
    && apt-get update && apt-get install -y --no-install-recommends $RUN_DEPS \
    && rm -rf /var/lib/apt/lists/*

# Copy in your requirements file
ADD requirements.txt /requirements.txt

# Install build deps, then run `pip install`, then remove unneeded build deps all in a single step.
# Correct the path to your production requirements file, if needed.
RUN set -ex \
    && BUILD_DEPS=" \
    build-essential \
    libpcre3-dev \
    libpq-dev \
    " \
    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \
    && pip install --no-cache-dir -r /requirements.txt \
    \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
    && rm -rf /var/lib/apt/lists/*
    
COPY . .


# uWSGI will listen on this port
#EXPOSE 8000

CMD ["celery","-A","config","worker","-l","info"]
