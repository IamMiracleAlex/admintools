# Generated by Django 3.1.1 on 2021-06-28 10:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('classification', '0037_auto_20210628_1143'),
        ('annotation', '0045_auto_20210615_0412'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avg_intent', models.IntegerField()),
                ('classification', models.ManyToManyField(to='classification.Node')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField()),
                ('name', models.CharField(max_length=250)),
                ('xpath', models.CharField(max_length=250)),
                ('intent', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EntityFacetRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_facet', models.CharField(choices=[('yes', 'yes'), ('no', 'no'), ('maybe', 'maybe')], default='maybe', max_length=10)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotation.entity')),
                ('facet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classification.facetvalue')),
            ],
        ),
        migrations.AddField(
            model_name='entity',
            name='facets',
            field=models.ManyToManyField(blank=True, through='annotation.EntityFacetRelationship', to='classification.FacetValue'),
        ),
        migrations.AddField(
            model_name='entity',
            name='products',
            field=models.ManyToManyField(to='annotation.Product'),
        ),
    ]
